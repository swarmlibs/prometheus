# yaml-language-server: $schema=https://raw.githubusercontent.com/swarmlibs/dockerstack-schema/main/schema/dockerstack-spec.json

x-default-logging: &x-default-logging
  options:
    max-size: "12m"
    max-file: "5"
  driver: json-file

x-exporter-resources-constraints: &x-exporter-resources-constraints
  limits:
    memory: 128M
  reservations:
    memory: 64M

volumes:
  alertmanager-data:
  alertmanager-configs:

  prometheus-data:
  prometheus-configs:

networks:
  dockerswarm_ingress:
    name: dockerswarm_ingress
    external: true
  dockerswarm_metrics:
    name: dockerswarm_metrics
    external: true
  prometheus_exporters:
    name: prometheus_exporters
    external: true

services:

  # ====================================================
  # Prometheus
  # https://github.com/prometheus/prometheus
  # ====================================================

  prometheus:
    image: swarmlibs/prometheus:local
    deploy:
      mode: global
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.role == manager
      labels:
        io.prometheus.role: "prometheus"
        io.prometheus.dockerswarm-tasks.should_be_scraped: "false"
        io.prometheus.dockerswarm-services.should_be_probed: "false"
    logging: *x-default-logging
    environment:
      - DOCKERSWARM_SERVICE_ID={{.Service.ID}}
      - DOCKERSWARM_SERVICE_NAME={{.Service.Name}}
      - DOCKERSWARM_NODE_ID={{.Node.ID}}
      - DOCKERSWARM_NODE_HOSTNAME={{.Node.Hostname}}
      - DOCKERSWARM_TASK_ID={{.Task.ID}}
      - DOCKERSWARM_TASK_NAME={{.Task.Name}}
      - DOCKERSWARM_TASK_SLOT={{.Task.Slot}}
      - DOCKERSWARM_STACK_NAMESPACE={{ index .Service.Labels "com.docker.stack.namespace"}}

      # Cluster Alertmanager address
      - PROMETHEUS_ALERTMANAGER_ADDR=tasks.alertmanager
    ports:
      - published: 9090
        target: 9090
        mode: host
    hostname: prometheus.svc.cluster.local
    networks:
      dockerswarm_ingress:
      dockerswarm_metrics:
      prometheus_exporters:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: volume
        source: prometheus-data
        target: /prometheus/data
      - type: volume
        source: prometheus-configs
        target: /prometheus-configs.d

  prometheus-configs-provider:
    image: swarmlibs/prometheus-configs-provider:main
    command:
      - --output-dir=/prometheus-configs.d
    deploy:
      mode: global
      resources: *x-exporter-resources-constraints
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.role == manager
      labels:
        io.prometheus.role: "prometheus-configs-provider"
    logging: *x-default-logging
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: volume
        source: prometheus-configs
        target: /prometheus-configs.d
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true

  prometheus-config-reloader:
    image: quay.io/prometheus-operator/prometheus-config-reloader:v0.74.0
    command:
      - --listen-address=:8080
      - --watched-dir=/prometheus-configs.d
      - --reload-url=http://host.docker.internal:9090/-/reload
      - --runtimeinfo-url=http://host.docker.internal:9090/api/v1/status/runtimeinfo
      - --watch-interval=15s
      - --reload-timeout=10s
    deploy:
      mode: global
      resources: *x-exporter-resources-constraints
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.role == manager
      labels:
        io.prometheus.role: "prometheus-config-reloader"
        io.prometheus.enabled: "true"
        io.prometheus.job_name: "prometheus-config-reloader"
        io.prometheus.scrape_port: "8080"
        io.prometheus.dockerswarm-services.should_be_probed: "false"
    logging: *x-default-logging
    networks:
      dockerswarm_metrics:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: volume
        source: prometheus-configs
        target: /prometheus-configs.d

  # ====================================================
  # Blackbox prober exporter
  # https://github.com/prometheus/blackbox_exporter
  # ====================================================

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    deploy:
      replicas: 1
      resources: *x-exporter-resources-constraints
      labels:
        io.prometheus.role: "blackbox-exporter"
        io.prometheus.enabled: "true"
        io.prometheus.job_name: "blackbox-exporter"
        io.prometheus.scrape_port: "9115"
        io.prometheus.dockerswarm-services.should_be_probed: "false"
    logging: *x-default-logging
    hostname: blackbox-exporter.svc.cluster.local
    networks:
      dockerswarm_ingress:
      dockerswarm_metrics:
      prometheus_exporters:
